#BlueJ class context
comment0.target=SeatManager
comment0.text=\r\n\ Clase\ SeatManager\:\r\n\ Sesi\u00F3n\ 10\:\r\n\ \ \ \ \ \ Constructor\ con\ par\u00E1metros\r\n\ \ \ \ \ \ M\u00E9todos\ get\ y\ set\ de\ FirstRows\ y\ StandardRows\r\n\ \ \ \ \ \ M\u00E9todo\ setSeats\r\n\ \ \ \ \ \ M\u00E9todo\ bookSeat\r\n\ \ \ \ \ \ M\u00E9todo\ release\r\n\ \ \ \ \ \ M\u00E9todo\ getSeat\r\n\ \ \ \ \ \ M\u00E9todo\ oldestPassenger\r\n\ \ \ \ \ \ M\u00E9todo\ numberOfFreeSeats\r\n\ Tarea\ No\ Presencial\ Sesi\u00F3n\ 11\:\r\n\ \ \ \ \ \ M\u00E9todo\ print\r\n\ \ \ \ \ \ M\u00E9todo\ numberOfOcuppied\r\n\ Sesi\u00F3n\ 12\:\r\n\ \ \ \ \ \ M\u00E9todo\ removeMales\r\n\ \ \ \ \ \ M\u00E9todo\ getYoungestPeople\ \r\n\ \ \ \ \ \ M\u00E9todo\ youngestAge\r\n\ Tarea\ No\ Presencial\ Sesi\u00F3n\ 12\:\r\n\ \ \ \ \ \ M\u00E9todo\ getNumPax\r\n\ \ \ \ \ \ M\u00E9todo\ getNumPaxBySection\r\n\ \ \ \ \ \ M\u00E9todo\ validArea\r\n\ \ \ \ \ \ M\u00E9todo\ loadPassengers\r\n\ \ \ \ \ \ M\u00E9todo\ loadPax\r\n\ \ \ \ \ \ M\u00E9todo\ loadPassengersInPlane\r\n\ \ Ejercicios\ de\ complemento\:\r\n\ \ \ \ \ \ M\u00E9todo\ getPosition\r\n\ \ \ \ \ \ M\u00E9todo\ getFirstFreeSeatsInWindow\r\n\ \ \ \ \ \ M\u00E9todo\ getColumn\r\n\ \ \ \ \ \ M\u00E9todo\ getColumnArray\r\n\ \ \ \ \ \ M\u00E9todo\ getRow\r\n\ \ \ \ \ \ M\u00E9todo\ getRowArray\r\n\ \ \ \ \ \ M\u00E9todo\ subArray\r\n\ \ \ \ \ \ Modificaci\u00F3n\ m\u00E9todo\ print\r\n\ \r\n\ @author\ Omar\ Teixeira\ Gonz\u00E1lez\r\n\ @version\ 14-12-20\r\n
comment1.params=first\ standard
comment1.target=SeatManager(int,\ int)
comment1.text=\r\n\ Constructor\ con\ par\u00E1metros\ de\ la\ calse\ SeatManager\r\n
comment10.params=person
comment10.target=Position\ getPosition(Person)
comment10.text=\r\n\ M\u00E9todo\ que\ recibe\ una\ persona\ como\ p\u00E1rametro\ y\ devuelve\ un\ objeto\ con\ el\ asiento\ en\ el\ que\ esta\ sentada\r\n\ \r\n\ @param\ \ \ person,\ pasajero\ del\ avi\u00F3n,\ de\ tipo\ Person\r\n\ @return\ \ position,\ objeto\ con\ la\ posici\u00F3n\ del\ pasajero,\ de\ tipo\ Position\r\n
comment11.params=
comment11.target=int\ getFirstFreeSeatsInWindow()
comment11.text=\r\n\ M\u00E9todo\ que\ devuelve\ la\ primera\ fila\ en\ la\ que\ hay\ mas\ de\ dos\ asientos\ libres\ consecutivos\r\n
comment12.params=column
comment12.target=Person[]\ getColumn(int)
comment12.text=\r\n\ M\u00E9todo\ que\ devuelve\ todas\ las\ personas\ que\ hay\ en\ una\ columna\r\n\ \r\n\ @param\ \ \ column,\ columna\ para\ recopilar\ a\ todas\ las\ personas\ que\ estan\ en\ ella,\ de\ tipo\ int\r\n\ @return\ \ personas\ de\ la\ columna\ seleccionada\r\n
comment13.params=column
comment13.target=java.util.ArrayList\ getColumnArray(int)
comment13.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ arrayList\ de\ las\ personas\ que\ hay\ en\ una\ columna\r\n\ \r\n\ @param\ \ \ column,\ columna\ para\ recopilar\ a\ todas\ las\ personas\ que\ estan\ en\ ella,\ de\ tipo\ int\r\n\ @return\ \ personas\ de\ la\ columna\ seleccionada\r\n
comment14.params=row
comment14.target=Person[]\ getRow(int)
comment14.text=\r\n\ M\u00E9todo\ que\ devuelve\ todas\ las\ personas\ que\ hay\ en\ una\ fila\r\n\ \r\n\ @param\ \ \ row,\ fila\ para\ recopilar\ a\ todas\ las\ personas\ que\ estan\ en\ ella,\ de\ tipo\ int\r\n\ @return\ \ personas\ de\ la\ fila\ seleccionada\r\n
comment15.params=row
comment15.target=java.util.ArrayList\ getRowArray(int)
comment15.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ arrayList\ de\ las\ personas\ que\ hay\ en\ una\ fila\r\n\ \r\n\ @param\ \ \ row,\ fila\ para\ recopilar\ a\ todas\ las\ personas\ que\ estan\ en\ ella,\ de\ tipo\ int\r\n\ @return\ \ personas\ de\ la\ fila\ seleccionada\r\n
comment16.params=row1\ column1\ row2\ column2
comment16.target=Person[][]\ subArray(int,\ int,\ int,\ int)
comment16.text=\r\n\ M\u00E9todo\ que\ devuelva\ un\ array\ Bidimensionl\ comprendido\ entre\ las\ columnas\ y\ filas\ indicadas\r\n\ \r\n\ @param\ \ \ row1\r\n\ \ \ \ \ \ \ \ \ \ column1\r\n\ \ \ \ \ \ \ \ \ \ row2\r\n\ \ \ \ \ \ \ \ \ \ column2,\ filas\ y\ columnas\ del\ area\ seleccionada\r\n\ @return\ \ list,\ array\ bidimensional\ con\ las\ personas\r\n
comment17.params=row
comment17.target=void\ removeRow(int)
comment17.text=\r\n\ M\u00E9todo\ que\ elimina\ las\ personas\ de\ una\ fila\ seleccionada\r\n\ \r\n\ @param\ \ \ row,\ fila\ seleccionada,\ de\ tipo\ int\r\n
comment18.params=column
comment18.target=void\ removeColumn(int)
comment18.text=\r\n\ M\u00E9todo\ que\ elimina\ las\ personas\ de\ una\ columna\ seleccionada\r\n\ \r\n\ @param\ \ \ column,\ column\ seleccionada,\ de\ tipo\ int\r\n
comment19.params=
comment19.target=Person\ oldestPassenger()
comment19.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ pasajero\ de\ m\u00E1s\ edad\ o\ en\ caso\ de\ que\ el\ avi\u00F3n\ est\u00E9\ vac\u00EDo\ devuelve\ null\r\n\ \r\n\ @return\ \ passenger\ o\ null\r\n
comment2.params=
comment2.target=int\ getFirstRows()
comment2.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ valor\ del\ atributo\ firstRows\r\n\ \r\n\ @return\ firstRows,\ numero\ de\ filas\ en\ primera\r\n
comment20.params=row
comment20.target=int\ numberOfFreeSeats(int)
comment20.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ asientos\ libres\ en\ una\ fila\ del\ avi\u00F3n\r\n\ \r\n\ @param\ \ \ row,\ fila\ del\ avi\u00F3n,\ de\ tipo\ int\r\n\ @return\ \ numberOfFreeSeats,\ numero\ de\ asientos,\ de\ tipo\ int\r\n
comment21.params=
comment21.target=int\ numberOfOccupiedSeats()
comment21.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ numero\ de\ asientos\ ocupados\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ count,\ cuenta\ de\ los\ asientos\ ocupados,\ de\ tipo\ int\r\n
comment22.params=
comment22.target=void\ print()
comment22.text=\r\n\ M\u00E9todo\ print\ que\ muestra\ el\ estado\ de\ los\ asientos\ del\ avi\u00F3n.\ Con\ el\ siguiente\ formato\:\r\n\ X\ ->\ adulto\r\n\ C\ ->\ ni\u00F1o\r\n\ ?\ ->\ asiento\ libre\r\n
comment23.params=area1\ area2
comment23.target=void\ printForAreas(int,\ int)
comment23.text=\r\n\ M\u00E9todo\ que\ imprime\ las\ filas\ y\ columnas\ de\ un\ avi\u00F3n\ por\ partes,\ separadas\ entre\ first\ y\ standard\r\n
comment24.params=list
comment24.target=int\ removeMales(java.util.ArrayList)
comment24.text=\r\n\ M\u00E9todo\ que\ elimina\ los\ hombres\ de\ la\ lista\ recibida\ y\ devuelve\ el\ n\u00FAmero\ eliminado\ de\ estos\r\n\ \r\n\ @param\ \ \ lista\ con\ par\u00E1metros\r\n\ @return\ n\u00FAmero\ de\ hombres\ eliminados\r\n
comment25.params=
comment25.target=java.util.ArrayList\ getYoungestPeople()
comment25.text=\r\n\ M\u00E9todo\ que\ devuelve\ las\ personas\ m\u00E1s\ jovenes\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ arrayList\ con\ las\ personas\ de\ menor\ edad\ que\ est\u00E9n\ en\ el\ avi\u00F3n\r\n
comment26.params=
comment26.target=int\ youngestAge()
comment26.text=\r\n\ M\u00E9todo\ que\ devuelve\ la\ edad\ del\ pasajero\ m\u00E1s\ joven\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ age,\ edad\ del\ pasajero\ m\u00E1s\ joven\r\n
comment27.params=
comment27.target=java.util.ArrayList\ childrenPassengers()
comment27.text=\r\n\ M\u00E9todo\ que\ devuelve\ una\ lista\ que\ contiene\ a\ todos\ los\ pasajeros\ que\ son\ ni\u00F1os\r\n\ \r\n\ @return\ \ arrayList\ con\ las\ personas\ menores\ de\ 18\ a\u00F1os\r\n
comment28.params=area
comment28.target=int\ getNumPax(byte)
comment28.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ pasajeros\ sentados\ en\ un\ \u00E1rea\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ n\u00FAmero\ de\ pasajerso\ sentados\ en\ un\ \u00E1rea\ del\ avi\u00F3n\r\n
comment29.params=area
comment29.target=boolean\ validArea(byte)
comment29.text=\r\n\ M\u00E9todo\ que\ controla\ si\ el\ area\ es\ valida\r\n\ \r\n\ @param\ \ \ area,\ area\ del\ avi\u00F3n,\ de\ tipo\ byte\r\n
comment3.params=
comment3.target=int\ getStandardRows()
comment3.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ valor\ del\ atributo\ standardRows\r\n\ \r\n\ @return\ firstRows,\ numero\ de\ filas\ en\ turista\r\n
comment30.params=sm1
comment30.target=void\ fillSeats(SeatManager)
comment30.text=\r\n\ M\u00E9todo\ que\ rellena\ los\ asientos\ con\ personas\ aleatorias\r\n\ \r\n\ @param\ \ \ sm1,\ de\ tipo\ SeatManager\r\n
comment31.params=row1\ column1\ row2\ column2
comment31.target=int\ getNumPaxBySection(int,\ int,\ int,\ int)
comment31.text=\r\n\ \ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ pasajeros\ sentados\ en\ una\ secci\u00F3n\ del\ avi\u00F3n\r\n\ \ \r\n\ \ @param\ \ row1,\r\n\ \ \ \ \ \ \ \ \ \ column1,\r\n\ \ \ \ \ \ \ \ \ \ row2,\r\n\ \ \ \ \ \ \ \ \ \ column2,\r\n\ \ \ \ \ \ \ \ \ \ filas\ y\ columnas\ que\ determinan\ la\ secci\u00F3n,\ de\ tipo\ int\r\n\ @return\ \ cuenta\ del\ numero\ de\ personas\ que\ hay\ en\ esa\ zona\r\n
comment32.params=paxNumber
comment32.target=void\ loadPax(int)
comment32.text=\r\n\ M\u00E9todo\ que\ sienta\ en\ el\ avi\u00F3n\ a\ un\ n\u00FAmero\ de\ pasajeros\ introducido\ por\ par\u00E1metro\r\n\ \r\n\ @param\ \ \ paxNumber,\ numero\ de\ pasajeros\ a\ sentar\ en\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment33.params=
comment33.target=int\ numberOfFreeSeats()
comment33.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ asientos\ libres\r\n\ \r\n\ @return\ \ freeSeats,\ numero\ de\ asientos\ libres\r\n
comment34.params=passengersToSeat
comment34.target=void\ loadPassengers(int)
comment34.text=\r\n\ M\u00E9todo\ que\ asigna\ asientos\ a\ un\ n\u00FAmero\ de\ pasajeros\ recibido\ como\ parametro\r\n\ \r\n\ @param\ \ \ passengersToSeat,\ numero\ de\ pasajeros\ para\ sentar,\ de\ tipo\ int\r\n
comment35.params=passengersToSeat
comment35.target=void\ loadPassengersInPlane(int)
comment35.text=\r\n\ M\u00E9todo\ que\ asigna\ asientos\ a\ un\ n\u00FAmero\ de\ pasajeros\ recibido\ como\ par\u00E1metro\r\n\ \r\n\ @param\ \ \ passengersToSeat,\ numero\ de\ pasajeros\ para\ introducir\ en\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment36.params=
comment36.target=int\ columnLength()
comment36.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ asientos\ en\ las\ columnas\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ count,\ cuenta\ del\ numero\ de\ asientos\ en\ las\ columnas\r\n
comment37.params=
comment37.target=int\ rowLength()
comment37.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ asientos\ en\ las\ filas\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ row,\ cuenta\ del\ numero\ de\ asientos\ en\ la\ fila\r\n
comment38.params=condition\ msg
comment38.target=void\ checkParam(boolean,\ java.lang.String)
comment38.text=\r\n\ Controla\ el\ par\u00E1metro\ y\ devuelve\ un\ mensaje\ en\ caso\ de\ ser\ falso\r\n
comment39.params=list\ msg
comment39.target=void\ checkNullElements(java.util.ArrayList,\ java.lang.String)
comment39.text=\r\n\ M\u00E9todo\ que\ comprueba\ el\ n\u00FAmero\ de\ elementos\ nulos\ en\ la\ lista\r\n
comment4.params=rows
comment4.target=void\ setFirstRows(int)
comment4.text=\r\n\ M\u00E9todo\ que\ modifica\ el\ valor\ del\ atributo\ FirstRows\r\n\ \r\n\ @param\ \ rows,\ numero\ de\ filas\ para\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment5.params=rows
comment5.target=void\ setStandardRows(int)
comment5.text=\r\n\ M\u00E9todo\ que\ modifica\ el\ valor\ del\ atributo\ StandardRows\r\n\ \r\n\ @param\ \ rows,\ numero\ de\ filas\ para\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment6.params=seats
comment6.target=void\ setSeats(Person[][])
comment6.text=\r\n\ M\u00E9todo\ que\ asigna\ un\ nuevo\ valor\ a\ seats\r\n\ \r\n\ @param\ \ \ seats,\ nuevo\ valor\ para\ seats,\ de\ tipo\ Person[][]\r\n
comment7.params=passenger\ row\ column
comment7.target=boolean\ bookSeat(Person,\ int,\ int)
comment7.text=\r\n\ M\u00E9todo\ que\ reserva\ el\ asiento\ dado\ una\ columna\r\n
comment8.params=row\ column
comment8.target=Person\ release(int,\ int)
comment8.text=\r\n\ M\u00E9todo\ que\ libera\ el\ asiento\r\n\ \r\n\ @param\ row,\ fila,\ de\ tipo\ int\r\n\ @param\ column,\ columna,\ de\ tipo\ int\r\n\ @return\ person,\ persona\ que\ libera\ el\ asiento\r\n
comment9.params=row\ column
comment9.target=Person\ getSeat(int,\ int)
comment9.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ asiento\ dada\ la\ fila\ y\ la\ columna\r\n\ \r\n\ @param\ \ \ row,\ fila,\ de\ tipo\ int\r\n\ @param\ \ \ column,\ columna,\ de\ tipo\ int\r\n\ @return\ \ seats,\ los\ asientos\r\n
numComments=40
