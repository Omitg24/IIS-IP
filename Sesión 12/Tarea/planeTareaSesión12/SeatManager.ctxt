#BlueJ class context
comment0.target=SeatManager
comment0.text=\r\n\ Write\ a\ description\ of\ class\ SeatManager\ here.\r\n\ \r\n\ @author\ Omar\ Teixeira\ Gonz\u00E1lez\r\n\ @version\ 25-10-20\r\n
comment1.params=first\ standard
comment1.target=SeatManager(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ SeatManager\r\n
comment10.params=
comment10.target=void\ print()
comment10.text=\r\n\ M\u00E9todo\ print\ que\ muestra\ el\ estado\ de\ los\ asientos\ del\ avi\u00F3n.\ Con\ el\ siguiente\ formato\:\r\n\ X\ ->\ adulto\r\n\ C\ ->\ ni\u00F1o\r\n\ ?\ ->\ asiento\ libre\r\n
comment11.params=list
comment11.target=int\ removeMales(java.util.ArrayList)
comment11.text=\r\n\ M\u00E9todo\ que\ elimina\ los\ hombres\ de\ la\ lista\ recibida\ y\ devuelve\ el\ n\u00FAmero\ eliminado\ de\ estos\r\n\ \r\n\ @param\ \ \ lista\ con\ par\u00E1metros\r\n\ @return\ n\u00FAmero\ de\ hombres\ eliminados\r\n
comment12.params=
comment12.target=java.util.ArrayList\ getYoungestPeople()
comment12.text=\r\n\ M\u00E9todo\ que\ devuelve\ las\ personas\ m\u00E1s\ jovenes\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ arrayList\ con\ las\ personas\ de\ menor\ edad\ que\ est\u00E9n\ en\ el\ avi\u00F3n\r\n
comment13.params=
comment13.target=java.util.ArrayList\ childrenPassengers()
comment13.text=\r\n\ M\u00E9todo\ que\ devuelve\ una\ lista\ que\ contiene\ a\ todos\ los\ pasajeros\ que\ son\ ni\u00F1os\r\n\ \r\n\ @return\ \ arrayList\ con\ las\ personas\ menores\ de\ 18\ a\u00F1os\r\n
comment14.params=area
comment14.target=int\ getNumPax(byte)
comment14.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ pasajeros\ sentados\ en\ un\ \u00E1rea\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ n\u00FAmero\ de\ pasajerso\ sentados\ en\ un\ \u00E1rea\ del\ avi\u00F3n\r\n
comment15.params=row1\ column1\ row2\ column2
comment15.target=int\ getNumPaxBySection(int,\ int,\ int,\ int)
comment15.text=\r\n\ \ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ pasajeros\ sentados\ en\ una\ secci\u00F3n\ del\ avi\u00F3n\r\n\ \ \r\n\ \ @param\ \ row1,\r\n\ \ \ \ \ \ \ \ \ \ column1,\r\n\ \ \ \ \ \ \ \ \ \ row2,\r\n\ \ \ \ \ \ \ \ \ \ column2,\r\n\ \ \ \ \ \ \ \ \ \ filas\ y\ columnas\ que\ determinan\ la\ secci\u00F3n,\ de\ tipo\ int\r\n
comment16.params=paxNumber
comment16.target=void\ loadPax(int)
comment16.text=\r\n\ M\u00E9todo\ que\ sienta\ en\ el\ avi\u00F3n\ a\ un\ n\u00FAmero\ de\ pasajeros\ introducido\ por\ par\u00E1metro\r\n\ \r\n\ @param\ \ \ paxNumber,\ numero\ de\ pasajeros\ a\ sentar\ en\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment17.params=passengersToSeat
comment17.target=void\ loadPassengers(int)
comment17.text=\r\n\ M\u00E9todo\ que\ asigna\ asientos\ a\ un\ n\u00FAmero\ de\ pasajeros\ recibido\ como\ parametro\r\n\ \r\n\ @param\ \ \ passengersToSeat,\ numero\ de\ pasajeros\ para\ sentar,\ de\ tipo\ int\r\n
comment18.params=passengersToSeat
comment18.target=void\ loadPassengersInPlane(int)
comment18.text=\r\n\ M\u00E9todo\ que\ asigna\ asientos\ a\ un\ n\u00FAmero\ de\ pasajeros\ recibido\ como\ par\u00E1metro\r\n\ \r\n\ @param\ \ \ passengersToSeat,\ numero\ de\ pasajeros\ para\ introducir\ en\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment19.params=condition\ msg
comment19.target=void\ checkParam(boolean,\ java.lang.String)
comment19.text=\r\n\ Controla\ el\ par\u00E1metro\ y\ devuelve\ un\ mensaje\ en\ caso\ de\ ser\ falso\r\n
comment2.params=rows
comment2.target=void\ setFirstRows(int)
comment2.text=\r\n\ M\u00E9todo\ que\ modifica\ el\ valor\ del\ atributo\ FirstRows\r\n\ \r\n\ @param\ \ rows,\ numero\ de\ filas\ para\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment20.params=list\ msg
comment20.target=void\ checkNullElements(java.util.ArrayList,\ java.lang.String)
comment20.text=\r\n\ M\u00E9todo\ que\ comprueba\ el\ n\u00FAmero\ de\ elementos\ nulos\ en\ la\ lista\r\n
comment3.params=rows
comment3.target=void\ setStandardRows(int)
comment3.text=\r\n\ M\u00E9todo\ que\ modifica\ el\ valor\ del\ atributo\ StandardRows\r\n\ \r\n\ @param\ \ rows,\ numero\ de\ filas\ para\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment4.params=passenger\ row\ column
comment4.target=boolean\ bookSeat(Person,\ int,\ int)
comment4.text=\r\n\ M\u00E9todo\ que\ reserva\ el\ asiento\ dado\ una\ columna\r\n
comment5.params=row\ column
comment5.target=Person\ release(int,\ int)
comment5.text=\r\n\ M\u00E9todo\ que\ libera\ el\ asiento\r\n\ \r\n\ @param\ row,\ fila,\ de\ tipo\ int\r\n\ @param\ column,\ columna,\ de\ tipo\ int\r\n\ @return\ person,\ persona\ que\ libera\ el\ asiento\r\n
comment6.params=row\ column
comment6.target=Person\ getSeat(int,\ int)
comment6.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ asiento\ dada\ la\ fila\ y\ la\ columna\r\n\ \r\n\ @param\ \ \ row,\ fila,\ de\ tipo\ int\r\n\ @param\ \ \ column,\ columna,\ de\ tipo\ int\r\n\ @return\ \ seats,\ los\ asientos\r\n
comment7.params=
comment7.target=Person\ oldestPassenger()
comment7.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ pasajero\ de\ m\u00E1s\ edad\ o\ en\ caso\ de\ que\ el\ avi\u00F3n\ est\u00E9\ vac\u00EDo\ devuelve\ null\r\n\ \r\n\ @return\ \ passenger\ o\ null\r\n
comment8.params=row
comment8.target=int\ numberOfFreeSeats(int)
comment8.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ asientos\ libres\ en\ una\ fila\ del\ avi\u00F3n\r\n\ \r\n\ @param\ \ \ row,\ fila\ del\ avi\u00F3n,\ de\ tipo\ int\r\n\ @return\ \ numberOfFreeSeats,\ numero\ de\ asientos,\ de\ tipo\ int\r\n
comment9.params=
comment9.target=int\ numberOfOccupiedSeats()
comment9.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ numero\ de\ asientos\ ocupados\ del\ avi\u00F3n\r\n\ \r\n\ @return\ \ count,\ cuenta\ de\ los\ asientos\ ocupados,\ de\ tipo\ int\r\n
numComments=21
