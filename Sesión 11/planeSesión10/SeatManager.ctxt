#BlueJ class context
comment0.target=SeatManager
comment0.text=\r\n\ Write\ a\ description\ of\ class\ SeatManager\ here.\r\n\ \r\n\ @author\ Omar\ Teixeira\ Gonz\u00E1lez\r\n\ @version\ 25-10-20\r\n
comment1.params=first\ standard
comment1.target=SeatManager(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ SeatManager\r\n
comment10.params=
comment10.target=java.util.ArrayList\ getYoungestPersons()
comment10.text=\r\n\ @return\ \ arrayList\ con\ las\ personas\ de\ menor\ edad\ que\ est\u00E9n\ en\ el\ avi\u00F3n\r\n
comment11.params=
comment11.target=void\ print()
comment11.text=\r\n\ M\u00E9todo\ print\ que\ muestra\ el\ estado\ de\ los\ asientos\ del\ avi\u00F3n.\ Con\ el\ siguiente\ formato\:\r\n\ X\ ->\ adulto\r\n\ C\ ->\ ni\u00F1o\r\n\ ?\ ->\ asiento\ libre\r\n
comment12.params=condition\ msg
comment12.target=void\ checkParam(boolean,\ java.lang.String)
comment12.text=\r\n\ Controla\ el\ par\u00E1metro\ y\ devuelve\ un\ mensaje\ en\ caso\ de\ ser\ falso\r\n
comment13.params=list\ msg
comment13.target=void\ checkNullElements(java.util.ArrayList,\ java.lang.String)
comment13.text=\r\n\ \r\n
comment2.params=rows
comment2.target=void\ setFirstRows(int)
comment2.text=\r\n\ M\u00E9todo\ que\ modifica\ el\ valor\ del\ atributo\ FirstRows\r\n\ \r\n\ @param\ \ rows,\ numero\ de\ filas\ para\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment3.params=rows
comment3.target=void\ setStandardRows(int)
comment3.text=\r\n\ M\u00E9todo\ que\ modifica\ el\ valor\ del\ atributo\ StandardRows\r\n\ \r\n\ @param\ \ rows,\ numero\ de\ filas\ para\ el\ avi\u00F3n,\ de\ tipo\ int\r\n
comment4.params=passenger\ row\ column
comment4.target=boolean\ bookSeat(Person,\ int,\ int)
comment4.text=\r\n\ M\u00E9todo\ que\ reserva\ el\ asiento\ dado\ una\ columna\r\n
comment5.params=row\ column
comment5.target=Person\ release(int,\ int)
comment5.text=\r\n\ M\u00E9todo\ que\ libera\ el\ asiento\r\n\ \r\n\ @param\ row,\ fila,\ de\ tipo\ int\r\n\ @param\ column,\ columna,\ de\ tipo\ int\r\n\ @return\ person,\ persona\ que\ libera\ el\ asiento\r\n
comment6.params=row\ column
comment6.target=Person\ getSeat(int,\ int)
comment6.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ asiento\ dada\ la\ fila\ y\ la\ columna\r\n\ \r\n\ @param\ \ \ row,\ fila,\ de\ tipo\ int\r\n\ @param\ \ \ column,\ columna,\ de\ tipo\ int\r\n\ @return\ \ seats,\ los\ asientos\r\n
comment7.params=
comment7.target=Person\ oldestPassenger()
comment7.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ pasajero\ de\ m\u00E1s\ edad\ o\ en\ caso\ de\ que\ el\ avi\u00F3n\ est\u00E9\ vac\u00EDo\ devuelve\ null\r\n\ \r\n\ @return\ \ passenger\ o\ null\r\n
comment8.params=row
comment8.target=int\ numberOfFreeSeats(int)
comment8.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ de\ asientos\ libres\ en\ una\ fila\ del\ avi\u00F3n\r\n\ \r\n\ @param\ \ \ row,\ fila\ del\ avi\u00F3n,\ de\ tipo\ int\r\n\ @return\ \ numberOfFreeSeats,\ numero\ de\ asientos,\ de\ tipo\ int\r\n
comment9.params=list
comment9.target=int\ removeMales(java.util.ArrayList)
comment9.text=\r\n\ Elimina\ los\ hombres\ de\ la\ lista\ recibida\ como\ par\u00E1metro\r\n\ \r\n\ @param\ \ \ lista\ con\ personas.\ No\ debe\ haber\ elementos\ null\r\n\ @return\ n\u00FAmero\ de\ hombres\ eliminados\r\n
numComments=14
