#BlueJ class context
comment0.target=PlaneTest
comment0.text=\r\n\ The\ test\ class\ PlaneTest.\r\n\r\n\ @author\ \ Omar\ Teixeira\ Gonz\u00E1lez\r\n\ @version\ 28-10-20\r\n
comment1.params=
comment1.target=PlaneTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ PlaneTest\r\n
comment10.params=
comment10.target=void\ testConstructorIdentifierInMinLimit()
comment10.text=\r\n\ 1-\ Identifier\ es\ 'A'\ \r\n
comment11.params=
comment11.target=void\ testConstructorIdentifierBetweenLimits()
comment11.text=\r\n\ 2-\ Identifier\ esta\ entre\ 'A'\ y\ 'Z'\r\n
comment12.params=
comment12.target=void\ testConstructorIdentifierInMaxLimit()
comment12.text=\r\n\ 3-\ Identifier\ es\ 'Z'\ \r\n
comment13.params=
comment13.target=void\ testConstructorFuelInMinLimit()
comment13.text=\r\n\ 1-\ Fuel\ igual\ a\ 0\ ->\ Nuevo\ valor\r\n
comment14.params=
comment14.target=void\ testConstructorFuelBetweenLimits()
comment14.text=\r\n\ 2-\ Fuel\ entre\ 0\ y\ 5000\ ->\ Nuevo\ valor\r\n
comment15.params=
comment15.target=void\ testConstructorFuelInMaxLimit()
comment15.text=\r\n\ 3-\ Fuel\ igual\ a\ 5000\ ->\ Nuevo\ valor\r\n
comment16.params=
comment16.target=void\ testConstructorFuelUnderMinLimit()
comment16.text=\r\n\ 4-\ Fuel\ menor\ que\ 0\ ->\ Valor\ por\ defecto\r\n
comment17.params=
comment17.target=void\ testConstructorFuelOverMaxLimit()
comment17.text=\r\n\ 5-\ Fuel\ mayor\ que\ 5000\ ->\ Valor\ por\ defecto\r\n
comment18.params=
comment18.target=void\ testFlyOver50_Z_EnoughFuel()
comment18.text=\r\n\ 1-\ km>50,\ Identificador\ Z\ y\ fuel\ suficiente\ ->\ reduce\ combustible\ y\ devuelve\ FLY-OK\r\n
comment19.params=
comment19.target=void\ testFlyOver50_NotZ_EnoughFuel()
comment19.text=\r\n\ 2-\ km>50,\ Identificador\ distinto\ a\ Z\ y\ fuel\ suficiente\ ->\ reduce\ combustible\ y\ devuelve\ FLY-OK\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ testFly50_Z_EnoughFuel()
comment20.text=\r\n\ 3-\ km\=50,\ Identificador\ Z\ y\ fuel\ suficiente\ ->\ reduce\ combustible\ y\ devuelve\ FLY-OK\r\n
comment21.params=
comment21.target=void\ testFly50_NotZ_EnoughFuel()
comment21.text=\r\n\ 4-\ km\=50,\ Identificador\ distinto\ a\ Z\ y\ fuel\ suficiente\ ->\ reduce\ combustible\ y\ devuelve\ FLY-OK\r\n
comment22.params=
comment22.target=void\ testFlyOver50_Z_NotEnoughFuel()
comment22.text=\r\n\ 5-\ km>50,\ Identificador\ Z\ y\ fuel\ insuficiente\ ->\ NO\ reduce\ combustible\ y\ devuelve\ REFUEL\ (a\ repostar)\r\n
comment23.params=
comment23.target=void\ testFlyOver50_NotZ_NotEnoughFuel()
comment23.text=\r\n\ 6-\ km>50,\ Identificador\ distinto\ a\ Z\ y\ fuel\ insuficiente\ ->\ NO\ reduce\ combustible\ y\ devuelve\ REFUEL\ (a\ repostar)\r\n
comment24.params=
comment24.target=void\ testFlyLess50_Z_EnoughFuel()
comment24.text=\r\n\ 7-\ km<50,\ Identificador\ Z\ y\ fuel\ suficiente\ ->\ NO\ reduce\ combustible\ y\ devuelve\ FLY\ FAILED\r\n
comment25.params=
comment25.target=void\ testFlyLess50_NotZ_EnoughFuel()
comment25.text=\r\n\ 8-\ km<50,\ Identificador\ distinto\ a\ Z\ y\ fuel\ suficiente\ ->\ NO\ reduce\ combustible\ y\ devuelve\ FLY\ FAIELD\r\n
comment26.params=
comment26.target=void\ testAccelerateInsideLimits()
comment26.text=\r\n\ 1-\ xSpeed\ e\ ySpeed\ dentro\ de\ los\ l\u00EDmites\ ->\ Cambiar\ el\ valor\ de\ los\ atributos\r\n
comment27.params=
comment27.target=void\ testAccelerateYOutOfTheLimits()
comment27.text=\r\n\ 2-\ xSpeed\ dentro\ de\ los\ l\u00EDmites\ e\ ySpeed\ fuera\ de\ ellos\ ->\ No\ cambiar\ el\ valor\ de\ los\ atributos\r\n
comment28.params=
comment28.target=void\ testAccelerateXOutOfTheLimits()
comment28.text=\r\n\ 3-\ xSpeed\ fuera\ de\ los\ l\u00EDmites\ e\ ySpeed\ dentro\ de\ ellos\ ->\ No\ cambiar\ el\ valor\ de\ los\ atributos\r\n
comment29.params=
comment29.target=void\ testAccelerateOutOfTheLimits()
comment29.text=\r\n\ 4-\ xSpeed\ e\ ySpeed\ fuera\ de\ los\ l\u00EDmites\ ->\ No\ cambiar\ el\ valor\ de\ los\ atributos\r\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ testFlyNoFuel()
comment4.text=\r\n\ 1-\ No\ hay\ combustible\ ->\ devuelve\ false\r\n
comment5.params=
comment5.target=void\ testFlyWithFuel()
comment5.text=\r\n\ 2-\ Si\ hay\ combustible\ ->\ devuelve\ true\ y\ reduce\ en\ 1\ el\ combustible\r\n
comment6.params=
comment6.target=void\ testToStringNoPilot()
comment6.text=\r\n\ 1-\ Piloto\ no\ existe\ ->\ devuelve\ entre\ otras\ cosas\ NO\ PILOT\r\n
comment7.params=
comment7.target=void\ testToStringPilot()
comment7.text=\r\n\ 2-\ Pilot\ existe\ ->\ deuvelve\ el\ hashcode\ del\ piloto\r\n
comment8.params=
comment8.target=void\ testConstructorPilotNull()
comment8.text=\r\n\ 1-\ Pilot\ es\ null\r\n
comment9.params=
comment9.target=void\ testConstructorPilotNotNull()
comment9.text=\r\n\ 2-\ Pilot\ no\ es\ null\ \r\n
numComments=30
