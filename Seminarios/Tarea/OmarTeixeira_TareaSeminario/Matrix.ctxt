#BlueJ class context
comment0.target=Matrix
comment0.text=\r\n\ Clase\ Matrix\ para\ la\ Tarea\ de\ Seminario\:\r\n\ \ ->\ Implementaci\u00F3n\ de\ constructores\ con\ par\u00E1metros\:\ size\ e\ int[][]\r\n\ \ ->\ Implementaci\u00F3n\ de\ variables\ de\ instancia\:\ matrix;\ y\ constantes\:\ MIN_DIMENSION,\ MAX_DIMENSION.\ MIN_NUMBER,\ MAX_NUMBER\r\n\ \ ->\ Implementaci\u00F3n\ de\ m\u00E9todos\:\ swapReverseByDiagonals(),\ rotateMatrix(),\ moveColumn(),\ print(),\ isMagicSquare(),\ replaceMatrix(),\ flattenMatrix()\r\n\ \r\n\ \ ->\ Creaci\u00F3n\ de\ pruebas\ de\ los\ m\u00E9todos\ en\ la\ clase\ MatrixTest.\r\n\ \r\n\ @author\ Omar\ Teixeira\ Gonz\u00E1lez\r\n\ @version\ 11-12-2020\ (\u00FAltima\ versi\u00F3n)\r\n
comment1.params=size
comment1.target=Matrix(int)
comment1.text=\r\n\ Constructor\ con\ par\u00E1mtetro\ size\ para\ la\ clase\ Matrix\r\n
comment10.params=
comment10.target=int[][]\ getMatrix()
comment10.text=\r\n\ M\u00E9todo\ que\ devuelve\ la\ matriz\r\n\ \r\n\ @return\ \ matrix\r\n
comment11.params=
comment11.target=int\ matrixSize()
comment11.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ celdas\ de\ la\ matriz\r\n\ \r\n\ @return\ size,\ numero\ de\ elementos\ de\ la\ matriz\r\n
comment12.params=column
comment12.target=int\ sumaColumnas(int)
comment12.text=\r\n\ M\u00E9todo\ que\ suma\ la\ columna\ introducida\ como\ par\u00E1metro\ y\ devuelve\ su\ valor\r\n\ \r\n\ @param\ \ \ column,\ columna\ a\ sumar,\ de\ tipo\ int\r\n\ @return\ \ suma,\ suma\ de\ la\ columna\ introducida\ como\ par\u00E1metro\r\n
comment13.params=row
comment13.target=int\ sumaFilas(int)
comment13.text=\r\n\ M\u00E9todo\ que\ suma\ la\ fila\ introducida\ como\ par\u00E1metro\ y\ devuelve\ su\ valor\r\n\ \r\n\ @param\ \ \ row,\ fila\ a\ sumar,\ de\ tipo\ int\r\n\ @return\ \ suma,\ suma\ de\ la\ fila\ introducida\ como\ par\u00E1metro\r\n
comment14.params=
comment14.target=int\ sumaDiagonalPrincipal()
comment14.text=\r\n\ M\u00E9todo\ que\ suma\ la\ diagonal\ principal\r\n\ \r\n\ @return\ \ suma,\ la\ suma\ de\ la\ diagonal\ principal\r\n
comment15.params=
comment15.target=int\ sumaDiagonalSecundaria()
comment15.text=\r\n\ M\u00E9todo\ que\ suma\ la\ diagonal\ secundaria\r\n\ \r\n\ @return\ \ suma,\ la\ suma\ de\ la\ diagonal\ secundaria\r\n
comment16.params=
comment16.target=int\ randomNumber()
comment16.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ n\u00FAmero\ aleatorio\ entre\ 0\ y\ 99\r\n\ \r\n\ @return\ \ randomNumber,\ numero\ aleatorio\ entre\ 0\ y\ 99,\ de\ tipo\ int\r\n
comment17.params=condition\ msg
comment17.target=void\ checkParam(boolean,\ java.lang.String)
comment17.text=\r\n\ M\u00E9todo\ que\ controla\ el\ par\u00E1metro\ y\ devuelve\ una\ excepci\u00F3n\ en\ caso\ de\ que\ no\ la\ cumpla\r\n\ \r\n\ @param\ \ \ condition,\ la\ condici\u00F3n\ a\ analizar,\ de\ tipo\ boolean\r\n\ \ \ \ \ \ \ \ \ \ msg,\ mensaje\ que\ devolver\u00E1\ en\ caso\ de\ que\ no\ se\ cumpla,\ de\ tipo\ String\r\n\ @return\ \ msg,\ mensaje\ que\ devolver\u00E1\ en\ caso\ de\ que\ no\ se\ cumpla,\ de\ tipo\ String\r\n
comment2.params=matrix
comment2.target=Matrix(int[][])
comment2.text=\r\n\ Constructor\ con\ par\u00E1mtetro\ matrix\ para\ la\ clase\ Matrix\r\n
comment3.params=
comment3.target=void\ swapReverseByDiagonals()
comment3.text=\r\n\ M\u00E9todo\ que\ intercambia\ los\ elementos\ de\ las\ dos\ diagonales\ invirtiendo\ los\ elementos.\ \r\n
comment4.params=
comment4.target=void\ rotateMatrix()
comment4.text=\r\n\ M\u00E9todo\ que\ gira\ la\ matriz\ 90\u00BA\ a\ la\ izquierda\ \r\n
comment5.params=column
comment5.target=void\ moveColumn(int)
comment5.text=\r\n\ M\u00E9todo\ que\ mueve\ los\ elementos\ de\ una\ columna\ como\ par\u00E1metro\ al\ final\ de\ la\ matriz.\r\n\ \r\n\ @param\ \ \ column,\ columna\ para\ mover\ a\ la\ izquierda,\ de\ tipo\ int\r\n
comment6.params=
comment6.target=void\ print()
comment6.text=\r\n\ M\u00E9todo\ que\ imprime\ por\ pantalla\ la\ matriz\r\n
comment7.params=
comment7.target=boolean\ isMagicSquare()
comment7.text=\r\n\ M\u00E9todo\ que\ devuelve\ true\ o\ false\ si\ la\ matriz\ es\ un\ cuadrado\ m\u00E1gico,\ es\ decir,\ la\ suma\ de\ los\ elementos\ de\ las\ filas,\ la\ suma\ de\ los\ elementos\ de\r\n\ las\ columnas\ y\ la\ suma\ de\ los\ elementos\ de\ las\ diagonales\ es\ la\ misma.\r\n\ \r\n\ @return\ \ true\ o\ false,\ en\ funci\u00F3n\ de\ si\ cumple\ los\ requisitos.\r\n
comment8.params=flatMatrix
comment8.target=int\ replaceMatrix(java.util.ArrayList)
comment8.text=\r\n\ M\u00E9todo\ que\ recibe\ un\ arrayList\ y\ remplaza\ todos\ los\ elementos\ en\ la\ matiz,\ y\ devuelve\ el\ numero\ de\ elementos\ que\ se\ han\ reemplazado\ en\ la\ matriz\r\n\ \r\n\ @return\ count,\ numero\ de\ elementos\ que\ se\ han\ modificado\ en\ la\ matriz\r\n
comment9.params=
comment9.target=java.util.ArrayList\ flattenMatrix()
comment9.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ contenido\ de\ la\ matriz\ en\ una\ sola\ linea\r\n
numComments=18
